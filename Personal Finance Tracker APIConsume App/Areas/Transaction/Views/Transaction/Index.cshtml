@model IEnumerable<Personal_Finance_Tracker_APIConsume_App.Areas.Transaction.Models.TransactionModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Transactions List</h1>



<p>
    <a asp-area="Transaction" asp-controller="Transaction" asp-action="AddNewTransaction" class="btn btn-outline-success">Create New</a>
</p>

<!-- Filter Section -->
<div class="d-flex justify-content-between mb-3">
    <div class="type">
        <label for="type" class="form-label">Type:</label>
        <select id="type" class="form-select-sm">
            <option value="">All</option>
            <option value="Income">Income</option>
            <option value="Expense">Expense</option>
        </select>
    </div>
    <div class="category">
        <label for="category" class="form-label">Category:</label>
        <select id="category" class="form-select-sm">
            <option value="">All</option>
            <option value="Food">Food</option>
            <option value="Rent">Rent</option>
            <option value="Leisure">Leisure</option>
        </select>

    </div>
    <div class="startDate">
        <label for="startDate" class="form-label">Start Date:</label>
        <input type="date" id="startDate" class="btn btn-outline-secondary">
    </div>
    <div class="endDate">
        <label for="endDate" class="form-label">End Date:</label>
        <input type="date" id="endDate" class="btn btn-outline-secondary">
    </div>
    <button class="btn btn-primary ps-3 pe-3" onclick="applyFilters()">Filter</button>
</div>


<span class="text-success mb-3 mt-2">@TempData["Success_Msg"]</span>
<span class="text-danger mb-3">@TempData["Error_Msg"]</span>

<table class="table table-dark table-striped table-hover text-center">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th colspan="2">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)&nbsp;<i class="fa-solid fa-indian-rupee-sign"></i>
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <a asp-area="Transaction" asp-controller="Transaction" asp-action="UpdateTransaction" asp-route-edit_id="@item.TransactionID"><i class="fa-solid fa-pen-to-square text-warning"></i></a>
                </td>
                <td>
                    <a asp-area="Transaction" asp-controller="Transaction" asp-action="DeleteTransaction" asp-route-delete_id="@item.TransactionID"><i class="fa-solid fa-trash text-danger"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    function applyFilters() {
        const type = document.getElementById("type").value;
        const category = document.getElementById("category").value;
        const startDate = document.getElementById("startDate").value;
        const endDate = document.getElementById("endDate").value;

        $.ajax({
            type: 'GET',
            url: '@Url.Action("Index", "Transaction")',
            data: { 'Type': type, 'Category': category, 'StartDate': startDate, 'EndDate': endDate },
            headers: { 'X-Requested-With': 'XMLHttpRequest' },
            success: function (response) {
                console.log(response); // Check the structure of the JSON response
                // Update table with filtered data
                updateTable(response);
            },
            error: function (response) {
                console.error("Error fetching filtered data:", response);
            }
        });
    }

    function updateTable(transactions) {
        const tbody = document.querySelector("table tbody");
        tbody.innerHTML = ""; // Clear current rows

        if (transactions && transactions.length > 0) {
            transactions.forEach(transaction => {
                const row = `
                        <tr>
                                <td>${transaction.type}</td>
                                <td>${transaction.category}</td>
                                <td>${transaction.amount}&nbsp;<i class="fa-solid fa-indian-rupee-sign"></i></td>
                                <td>${transaction.date}</td>
                                <td>${transaction.description}</td>
                                <td>
                                    <a href="/Transaction/Transaction/UpdateTransaction?edit_id=${transaction.transactionID}">
                                        <i class="fa-solid fa-pen-to-square text-warning"></i>
                                    </a>
                                </td>
                                <td>
                                    <a href="/Transaction/Transaction/DeleteTransaction?delete_id=${transaction.transactionID}">
                                       <i class="fa-solid fa-trash text-danger"></i>
                                    </a>
                                </td>
                        </tr>
                    `;
                tbody.innerHTML += row;
            });
        } else {
            tbody.innerHTML = `<tr><td colspan="7">No transactions found</td></tr>`;
        }
    }


</script>